{"ast":null,"code":"var _jsxFileName = \"G:\\\\react\\\\todolistreactnoclass\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ToDo from \"./ToDo\";\nimport ToDoForm from \"./ToDoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTask = usInput => {\n    if (usInput) {\n      const newItem = {\n        id: Math.floor(Math.random() * 100) + 1,\n        task: usInput,\n        complete: false\n      };\n      setTodos([...todos, newItem]);\n    }\n  };\n\n  const removeTask = () => {};\n\n  const handleTogle = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ToDoListReact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"\",\n        children: [\"Task list \", todos.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        toggleTask: handleTogle,\n        removeTask: removeTask\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/react/todolistreactnoclass/src/App.js"],"names":["useState","ToDo","ToDoForm","App","todos","setTodos","addTask","usInput","newItem","id","Math","floor","random","task","complete","removeTask","handleTogle","length","map","todo"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,OAAD,IAAa;AAC3B,QAAIA,OAAJ,EAAa;AACX,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CADxB;AAEdC,QAAAA,IAAI,EAAEN,OAFQ;AAGdO,QAAAA,QAAQ,EAAE;AAHI,OAAhB;AAKAT,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWI,OAAX,CAAD,CAAR;AACD;AACF,GATD;;AAUA,QAAMO,UAAU,GAAG,MAAM,CAAE,CAA3B;;AACA,QAAMC,WAAW,GAAG,MAAM,CAAE,CAA5B;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,KAAK,EAAC,EAAV;AAAA,iCAAwBZ,KAAK,CAACa,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEX;AAAnB;AAAA;AAAA;AAAA;AAAA,YALF,EAMGF,KAAK,CAACc,GAAN,CAAWC,IAAD,IAAU;AACnB,0BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAGE,QAAA,UAAU,EAAEH,WAHd;AAIE,QAAA,UAAU,EAAED;AAJd,SAEOI,IAAI,CAACV,EAFZ;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlCQN,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport ToDo from \"./ToDo\";\nimport ToDoForm from \"./ToDoForm\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTask = (usInput) => {\n    if (usInput) {\n      const newItem = {\n        id: Math.floor(Math.random() * 100) + 1,\n        task: usInput,\n        complete: false,\n      };\n      setTodos([...todos, newItem]);\n    }\n  };\n  const removeTask = () => {};\n  const handleTogle = () => {};\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>ToDoListReact</h1>\n        <h2 class=\"\">Task list {todos.length}</h2>\n      </header>\n      <ToDoForm addTask={addTask} />\n      {todos.map((todo) => {\n        return (\n          <ToDo\n            todo={todo}\n            key={todo.id}\n            toggleTask={handleTogle}\n            removeTask={removeTask}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}